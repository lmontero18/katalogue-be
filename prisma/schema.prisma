// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String 
  password String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  catalogues Catalogue[]


  @@map("users")
}

model Catalogue {
  id String @id @default(uuid())
  userId String
  slug String @unique
  businessName String
  contactLink String
  storeImageUrl String
  products Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("catalogues")
}

model Product {
  id String @id @default(uuid())
  catalogueId String
  name String
  price Decimal
  imageUrl String
  status ProductStatus @default(AVAILABLE)
  details String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  catalogue Catalogue @relation(fields: [catalogueId], references: [id])

  @@map("products")

}

enum ProductStatus {
  AVAILABLE
  SOLD
  RESERVED
}